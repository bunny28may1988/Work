trigger:
  - none

parameters:
  - name: environment
    displayName: Environment
    type: string
    values:
      - NonProd
      - Prod
    default: NonProd

variables:
  - ${{ if eq(parameters.environment, 'NonProd') }}:
      - group: SupplyChain-AWS-NonProd
      - group: SupplyChain-Secrets-NonProd
      - name: ENV
        value: nonprod
  - ${{ if eq(parameters.environment, 'Prod') }}:
      - group: SupplyChain-AWS-Prod
      - group: SupplyChain-Secrets-Prod
      - name: ENV
        value: prod
  - name: basePath
    value: "$(System.DefaultWorkingDirectory)/supplychain-infra/02-secrets-upload"

stages:
  - stage: Supplychain_Upload_AWS_Secrets
    displayName: "[${{parameters.environment}}] Upload AWS Secrets"
    jobs:
      - deployment: Supplychain_Upload_Secrets
        displayName: "[${{ parameters.environment }}] Supplychain - Upload Secrets to AWS Secrets Manager"
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: qetza.replacetokens.replacetokens-task.replacetokens@6
                  displayName: "Replace secret values"
                  inputs:
                    root: $(basePath)
                    sources: |
                      chainloop-secrets.yml => chainloop-secrets-rendered.yml
                    additionalVariables: |
                      - env: $(ENV)

                - task: PublishPipelineArtifact@1
                  inputs:
                    targetPath: '$(basePath)/chainloop-secrets-rendered.yml'
                    artifact: 'secrets'
                    publishLocation: 'pipeline'

                - script: $(basePath)/scripts/upload-secrets.sh
                  displayName: "Upload application secrets to AWS Secrets Manager"
                  workingDirectory: $(basePath)
                  env:
                    SECRETS_FILE: $(basePath)/chainloop-secrets-rendered.yml
                    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
                    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
                    AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
                    AWS_ACCOUNT_ID: $(AWS_ACCOUNT_ID)

                - task: DeleteFiles@1
                  displayName: "Clean up rendered secrets"
                  condition: succeededOrFailed()
                  inputs:
                    SourceFolder: $(basePath)
                    Contents: chainloop-secrets-rendered.yml

      - deployment: Supplychain_Upload_Secret_Files
        displayName: "[${{ parameters.environment }}] Supplychain - Upload Secret Files to AWS Secrets Manager"
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                
                - task: DownloadSecureFile@1
                  name: ca_cer
                  displayName: 'Download IDAM certificate'
                  inputs:
                    secureFile: 'customca.pem'

                - script: |
                    $(basePath)/scripts/upload-secret-file.sh \
                      "kong-ingress/kong/$(ENV)/kotak-standalone-ca-cer" \
                      "string" \
                      "$(ca_cer.secureFilePath)"

                  displayName: "Upload domain certificate to AWS Secrets Manager"
                  workingDirectory: $(basePath)
                  env:
                    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
                    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
                    AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
                    AWS_ACCOUNT_ID: $(AWS_ACCOUNT_ID)